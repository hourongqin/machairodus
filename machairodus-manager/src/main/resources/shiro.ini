[main]
jdbcRealm=org.nanoframework.ext.shiro.realm.MyBatisRealm

# DataSource Name(数据源名称: NanaFramework)
jdbcRealm.dataSourceName=machairodus

# Realm Query(权限查询语句对象: NanoFramework)
realmQuery=org.nanoframework.ext.shiro.realm.RealmQuery
realmQuery.authenticationQuery=SELECT PASSWORD FROM T_SCD_USER WHERE USERNAME = ?
realmQuery.userRolesQuery=SELECT T1.CODE FROM T_SCD_ROLE T1 LEFT JOIN T_SCD_USER_ROLE T2 ON T1.ID = T2.ROLE_ID LEFT JOIN T_SCD_USER T3 ON T3.ID = T2.USER_ID WHERE T3.USERNAME = ?
realmQuery.permissionsQuery=SELECT T1.CODE FROM T_SCD_FUNC T1 LEFT JOIN T_SCD_ROLE_FUNC T2 ON T1.ID = T2.FUNC_ID LEFT JOIN T_SCD_ROLE T3 ON T3.ID = T2.ROLE_ID WHERE T3.CODE = ?

jdbcRealm.realmQuery=$realmQuery
jdbcRealm.permissionsLookupEnabled=true

# Salt Style(密码加密私匙获取方式)
jdbcRealm.saltStyle=EXTERNAL

# Hashed Credentials Matcher(密码加密)
credentialsMatcher=org.apache.shiro.authc.credential.HashedCredentialsMatcher
credentialsMatcher.hashAlgorithmName=md5
credentialsMatcher.hashIterations=2
credentialsMatcher.storedCredentialsHexEncoded=true
jdbcRealm.credentialsMatcher=$credentialsMatcher

# Enabled Realm Cache
jdbcRealm.cachingEnabled=true
jdbcRealm.authenticationCachingEnabled=true
jdbcRealm.authenticationCacheName=AUTHENTICATION_CACHE
jdbcRealm.authorizationCachingEnabled=true
jdbcRealm.authorizationCacheName=AUTHORIZATION_CACHE
memoryCacheManager=org.apache.shiro.cache.MemoryConstrainedCacheManager
jdbcRealm.cacheManager=$memoryCacheManager
securityManager.realms=$jdbcRealm

# Session Manager
sessionManager=org.apache.shiro.web.session.mgt.DefaultWebSessionManager
sessionManager.globalSessionTimeout=1800000
sessionIdCookie=org.apache.shiro.web.servlet.SimpleCookie
sessionIdCookie.name=sid
# sessionIdCookie.maxAge=1800
sessionIdCookie.httpOnly=true
sessionIdCookie.path=/
sessionManager.sessionIdCookie=$sessionIdCookie
sessionManager.sessionIdCookieEnabled=true
securityManager.sessionManager=$sessionManager

# Session Listener
# shiroSessionListener=org.nanoframework.ext.shiro.listener.ShiroSessionListener
# sessionManager.sessionListeners=$shiroSessionListener

# Session DAO
sessionDAO=org.nanoframework.ext.shiro.session.mgt.eis.RedisSessionDAO
# default: shiro, 支持主备配置(mainSource,slaveSource1,slaveSource2,...)，主节点失效时自动从备用节点进行查询
sessionDAO.redisSourceNames=shiro
# default: SHIRO_SESSION_
sessionDAO.sessionName=SHIRO_SESSION_
# default: SET
sessionDAO.persistType=SET
# default: 1800(s)
sessionDAO.sessionExpire=1800
sessionDAO.activeSessionsCacheName=shiroActiveSessionCache
sessionManager.sessionDAO=$sessionDAO

# Cache Manager
cacheManager=org.nanoframework.ext.shiro.cache.RedisCacheManager
# default: shiro, 支持主备配置(mainSource,slaveSource1,slaveSource2,...)，主节点失效时自动从备用节点进行查询
cacheManager.redisSourceNames=shiro
# default: SHIRO_CACHE
cacheManager.cacheName=SHIRO_CACHE
securityManager.cacheManager=$cacheManager

# Session Validation Scheduler
sessionValidationScheduler=org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler
sessionValidationScheduler.interval=30000
sessionValidationScheduler.sessionManager=$sessionManager
sessionManager.sessionValidationSchedulerEnabled=true
sessionManager.sessionValidationScheduler=$sessionValidationScheduler

sepcifyAuthc=org.nanoframework.ext.shiro.web.filter.authc.SpecifyFormAuthenticationFilter

sepcifyAuthc.loginUrl=/permissions/users/login
sepcifyAuthc.successUrl=/pages/main
logout.redirectUrl=/

[urls]
/permissions/users/login=sepcifyAuthc
/permissions/users/logout=logout
/media/**=anon
/**=sepcifyAuthc



